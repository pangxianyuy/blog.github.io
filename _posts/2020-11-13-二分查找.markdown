---
layout:     post
title:      "LeetCode刷题：二分查找"
subtitle:   " 二分查找类型题目总结，长期更新"
date:       2020-11-13 
author:     "杨小健"
header-img: "img/in-post/KG/KG-Head.jpg"
catalog: true
tags:
    - LeetCode
    - 代码
typora-root-url: ..
---

## 二分查找

 对于一个排序列表，在其中查找指定的元素，采用二分查找，时间复杂度为O(logN)



## 查找过程

​       首先，假设表中元素是按升序排列，将表中间位置记录的关键字与查找关键字比较，如果两者相等，则查找成功；

​     否则利用中间位置记录将表分成前、后两个子表，如果中间位置记录的关键字大于查找关键字，则进一步查找前一子表，否则进一步查找后一子表。

​     重复以上过程，直到找到满足条件的记录，使查找成功，或直到子表不存在为止，此时查找不成功。

## 要求

 1、必须采用顺序存储结构

2、必须按照关键字进行大小有序排列



## 基本实现思路

```py
def binarySearch(nums, target):
    if not nums: return 
    l, r= 0,  len(nums)-1
    while l <= r:
        m = l + (r-l) // 2
        if nums[m] == target:
            return m
        elif nums[m] > target:
            r = m - 1
        else:
            l = m + 1
    return 
```



## LeetCode 相关题目

- [ ] 简单:69. Sqrt(x) 
- [ ] 简单:744 Find Smallest Letter Greater Than Target
- [ ] 中等:540 Single Element in a Sorted Array
- [ ] 简单：278 First Bad Version
- [ ] 中等：153 Find Minimum in Rotated Sorted Array
- [ ] 中等：34 Find First and Last Position of Element in Sorted Array



## 

